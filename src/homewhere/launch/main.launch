<launch>
    <!-- Arguments -->
    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.5" />
    <arg name="world" default="rampsmall" />
    <arg name="mode" default="default" />
    <arg name="model" default="$(find homewhere)/urdf/box_robot.xacro" />

    <!-- Robot Description -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

    <!-- Gazebo World -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="world_name" value="$(find homewhere)/world/$(arg world).world" />
    </include>

    <!-- Spawn Robot -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model homewhere -x $(arg x) -y $(arg y) -z $(arg z) -Y 1.5708"
        output="screen" />


    <!-- TF Static Transform (LiDAR tilt compensation) -->
    <node pkg="tf" type="static_transform_publisher" name="lidar_static_tf"
          args="0 0 0.15 0 -0.05 0 base_link base_scan 100" />

    <!-- State Publishers -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Control Nodes -->
    <node name="control" pkg="homewhere" type="control.py" output="screen" />
    <node name="odometry" pkg="homewhere" type="odometry.py" output="screen" />

    <!-- PointCloud to LaserScan Node (filtered cloud for SLAM / navigation) -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
        <param name="target_frame" value="base_link" />
        <param name="transform_tolerance" value="0.05" />
        <param name="min_height" value="-0.1" />
        <param name="max_height" value="0.3" />
        <param name="publish_rate" value="15.0" />
        <remap from="cloud_in" to="/scan_cloud_clean" />
        <remap from="scan" to="/scan_flat" />
    </node>

    <!-- Scan to Cloud Node (convert LaserScan to PointCloud2) -->
    <node pkg="homewhere" type="scan_to_cloud.py" name="scan_to_cloud" output="screen" />
    <!-- Height Map Node (uses full point cloud, no filtering) -->
    <node pkg="homewhere" type="heightmap.py" name="height_map_node" output="screen" />


    <!-- SLAM Mode -->
    <group if="$(eval arg('mode') == 'slam')">
        <include file="$(find homewhere)/launch/slam.launch" />
    </group>

    <!-- Navigation Mode -->
    <group if="$(eval arg('mode') == 'nav')">
        <include file="$(find homewhere)/launch/navigation.launch">
            <arg name="map_file" value="$(find homewhere)/map/$(arg world)/map.yaml" />
        </include>
    </group>

</launch>
